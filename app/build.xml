<?xml version="1.0" encoding="UTF-8"?>
<project name="CloobsterApp" default="default" basedir=".">
    <!-- Path to src dir -->
	<property name="appDir" value="src/" />
	<!-- 	Path to production dir -->
	<property name="prodDir" value="prod/" />
	<!-- 	Apllication file -->
	<property name="appFile" value="src/app.js" />
	<!-- 	Configuration file -->
	<property name="configFile" value="src/app/util/Configuration.js" />
	
	<property name="androidDir" value="../android/CloobsterAppAndroid/assets/www/" />
	<property name="iOSDir" value="../iOS/www/" />
	
	<target name="buildDesktop">
		<echo message="Executing buildDesktop task from build.xml" />
		<exec executable="${sencha.cmd}" >
		
			<arg line="create jsb -a ${appDir}index.desktop.html -p ${appDir}app.desktop.jsb3" />
		</exec>
		<echo message="Disable debug mode" />
		<replaceregexp file="${appDir}app.desktop.jsb3" match='"debug": true' replace='"debug": false' byline="true" />
		<exec executable="${sencha.cmd}">
			
			<arg line="build -p ${appDir}app.desktop.jsb3 -d ${appDir}" />
		</exec>
		<antcall target="deleteOldProdFiles">
		    <param name="deleteProdDir" value="${prodDir}desktop"></param>
		</antcall>
		<copy file="${appDir}/touch/sencha-touch.js" todir="${prodDir}/desktop/lib" overwrite="true"></copy>
		<copydir dest="${prodDir}/desktop/res/images" src="${appDir}/res/images" forceoverwrite="true"></copydir>
		<move file="${appDir}/app-all.js" todir="${prodDir}/desktop/" overwrite="true"></move>
		<copy todir="${prodDir}/desktop/lib" overwrite="true">
			<fileset dir="${appDir}/lib">
				<exclude name="**/*.iphone.*" />
				<exclude name="**/*.phone.*" />
				<exclude name="**/*.ignore.*" />
			</fileset>
		</copy>
		<antcall target="copyCSS">
		    <param name="cssDestDir" value="${prodDir}/desktop/res/css"></param>
		</antcall>
		<move todir="${prodDir}/desktop/lib" includeemptydirs="false" overwrite="true">
			<fileset dir="${prodDir}/desktop/lib">
			</fileset>
			<regexpmapper from="^(.+)\.desktop\.(.+)$$" to="\1.\2" />
		</move>
	</target>
	
	<target name="buildAndroid">
		<echo message="Executing buildAndroid task from build.xml" />
		<exec executable="${sencha.cmd}" >	
			
			<arg line="create jsb -a ${appDir}index.desktop.html -p ${appDir}app.android.jsb3" />
		</exec>
		<echo message="Disable debug mode" />
		<replaceregexp file="${appDir}app.android.jsb3" match='"debug": true' replace='"debug": false' byline="true" />
		<exec executable="${sencha.cmd}">	
			<arg line="build -p ${appDir}app.android.jsb3 -d ${appDir}" />
		</exec>
		<antcall target="deleteOldProdFiles">
		    <param name="deleteProdDir" value="${prodDir}android"></param>
		</antcall>
		<copy file="${appDir}/touch/sencha-touch.js" todir="${prodDir}/android/lib" overwrite="true"></copy>
		<copy file="${appDir}/res/css/app-default.css" todir="${prodDir}/android/res/css" overwrite="true"></copy>
		<copydir dest="${prodDir}/android/res/images" src="${appDir}/res/images" forceoverwrite="true"></copydir>
		<move file="${appDir}/app-all.js" todir="${prodDir}/android/" overwrite="true"></move>
		<copy todir="${prodDir}/android/lib" overwrite="true">
			<fileset dir="${appDir}/lib">
				<exclude name="**/*.desktop.*" />
				<exclude name="**/*.iphone.*" />
				<exclude name="**/*.ignore.*" />
			</fileset>
		</copy>		
		<antcall target="copyCSS">
		    <param name="cssDestDir" value="${prodDir}/android/res/css"></param>
		</antcall>
		<move todir="${prodDir}/android/lib" includeemptydirs="false" overwrite="true">
			<fileset dir="${prodDir}/android/lib">
			</fileset>
			<regexpmapper from="^(.+)\.phone\.(.+)$$" to="\1.\2" />
		</move>
	</target>

	<target name="buildIOS">
		<echo message="Executing buildIOS task from build.xml" />
		<exec executable="${sencha.cmd}" >		
			<arg line="create jsb -a ${appDir}index.desktop.html -p ${appDir}app.ios.jsb3" />
		</exec>
		<echo message="Disable debug mode" />
		<replaceregexp file="${appDir}app.ios.jsb3" match='"debug": true' replace='"debug": false' byline="true" />
		<exec executable="${sencha.cmd}">
			
			<arg line="build -p ${appDir}app.ios.jsb3 -d ${appDir}" />
		</exec>
		<antcall target="deleteOldProdFiles">
		    <param name="deleteProdDir" value="${prodDir}ios"></param>
		</antcall>
		<copy file="${appDir}/touch/sencha-touch.js" todir="${prodDir}/ios/lib" overwrite="true"></copy>
		<copydir dest="${prodDir}/ios/res/images" src="${appDir}/res/images" forceoverwrite="true"></copydir>
		<move file="${appDir}/app-all.js" todir="${prodDir}/ios/" overwrite="true"></move>
		<copy todir="${prodDir}/ios/lib" overwrite="true">
			<fileset dir="${appDir}/lib">
				<exclude name="**/*.desktop.*" />
				<exclude name="**/*.phone.*" />
				<exclude name="**/*.ignore.*" />
			</fileset>
		</copy>
		<antcall target="copyCSS">
		    <param name="cssDestDir" value="${prodDir}/ios/res/css"></param>
		</antcall>
		<move todir="${prodDir}/ios/lib" includeemptydirs="false" overwrite="true">
			<fileset dir="${prodDir}/ios/lib">
			</fileset>
			<regexpmapper from="^(.+)\.iphone\.(.+)$$" to="\1.\2" />
		</move>
	</target>

	<!-- general tasks  -->
	<target name="cleanUpProductionFiles">
		<delete file="${appDir}app.desktop.jsb3"></delete>
		<delete file="${appDir}app.android.jsb3"></delete>
		<delete file="${appDir}app.ios.jsb3"></delete>
		<delete file="${appDir}all-classes.js"></delete>
	</target>
	
	<target name="deleteOldProdFiles">
	    <echo message="Delete old prod files in ${deleteProdDir}"></echo>
	   <delete dir="${deleteProdDir}/lib"></delete>
	   <delete dir="${deleteProdDir}/res"></delete>
	   <delete file="${deleteProdDir}/app-all.js"></delete>
	</target>
	
	<target name="resetDefaultConfig" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 ''," byline="true">
		</replaceregexp>
		<replaceregexp file="${appFile}" match="(disableCaching :) .*" replace="\1 true" byline="true">
		</replaceregexp>
	</target>
	
	<target name="copyCSS">
	    <copy todir="${cssDestDir}" overwrite="true">
		    <fileset dir="${appDir}/res/css">
		        <exclude name="*.rb"></exclude>
		        <exclude name="*.scss"></exclude>
		    </fileset>
		</copy>
	</target>
	
	<!-- Android -->
	<target name="copyAppAndroid" depends="buildAndroid">
		<echo message="Delete old files" />
		<delete dir="${androidDir}"></delete>
		<echo message="Copy App" />
		<copy todir="${androidDir}" overwrite="true">
			<fileset dir="${prodDir}/android">
				<exclude name="**/*.desktop.*" />
				<exclude name="**/*.iphone.*" />
				<exclude name="**/*.ignore.*" />
				<exclude name="**/.sass-cache/**" />
			</fileset>
		</copy>
		<echo message="Rename files" />
		<move todir="${androidDir}" includeemptydirs="false">
			<fileset dir="${androidDir}">
			</fileset>
			<regexpmapper from="^(.+)\.phone\.(.+)$$" to="\1.\2" />
		</move>
	</target>

	<target name="androidConfigLocal" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'http://192.168.2.135:8888'," byline="true">
		</replaceregexp>
		<replaceregexp file="${appFile}" match="(disableCaching :) .*" replace="\1 false," byline="true">
		</replaceregexp>
	</target>
	
	<target name="androidConfigTest" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'https://cloobster-test.appspot.com'," byline="true">
		</replaceregexp>
		<replaceregexp file="${appFile}" match="(disableCaching :) .*" replace="\1 false," byline="true">
		</replaceregexp>
	</target>
	
	<target name="androidConfigQuality" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'https://cloobster-quality.appspot.com'," byline="true">
		</replaceregexp>
		<replaceregexp file="${appFile}" match="(disableCaching :) .*" replace="\1 false," byline="true">
		</replaceregexp>
	</target>
	
	<target name="androidConfigProduction" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'https://karazy-cloobster.appspot.com'," byline="true">
		</replaceregexp>
		<replaceregexp file="${appFile}" match="(disableCaching :) .*" replace="\1 false," byline="true">
		</replaceregexp>
	</target>
	
	<!-- iOS -->
	
	<target name="copyAppiOS" depends="buildIOS">
		<echo message="Delete old files" />
		<delete dir="${iOSDir}"></delete>
		<echo message="Copy App" />
		<copy todir="${iOSDir}" overwrite="true">
			<fileset dir="${prodDir}/ios">
				<exclude name="**/*.desktop.*" />
				<exclude name="**/*.phone.*" />
				<exclude name="**/*.ignore.*" />
				<exclude name="**/.sass-cache/**" />
			</fileset>
		</copy>
		<echo message="Rename files" />
		<move todir="${iOSDir}" includeemptydirs="false">
			<fileset dir="${iOSDir}">
			</fileset>
			<regexpmapper from="^(.+)\.iphone\.(.+)$$" to="\1.\2" />
		</move>
	</target>
	
	<target name="iOSConfigLocal" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'http://192.168.1.102:8888'," byline="true">
		</replaceregexp>
	</target>
	
	<target name="iOSConfigTest" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'https://cloobster-test.appspot.com'," byline="true">
		</replaceregexp>
	</target>
	
	<target name="iOSConfigQuality" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'https://cloobster-quality.appspot.com'," byline="true">
		</replaceregexp>
	</target>
	
	<target name="iOSConfigProduction" depends="">
		<echo message="Setting config values" />
		<replaceregexp file="${configFile}" match="(serviceUrl :) .*" replace="\1 'https://karazy-cloobster.appspot.com'," byline="true">
		</replaceregexp>
	</target>
	
	
<!-- 	<target name="default" depends="buildDesktop, buildAndroid, buildIOS,cleanUpProductionFiles"></target> -->
	<target name="android-local" depends="androidConfigLocal, copyAppAndroid, cleanUpProductionFiles, resetDefaultConfig"/>
	<target name="android-test" depends="androidConfigTest, copyAppAndroid, cleanUpProductionFiles, resetDefaultConfig"/>
	<target name="android-quality" depends="androidConfigQuality, copyAppAndroid, cleanUpProductionFiles, resetDefaultConfig"/>
	<target name="android-production" depends="androidConfigProduction, copyAppAndroid, cleanUpProductionFiles, resetDefaultConfig"/>
	
	<target name="ios-local" depends="iOSConfigLocal, copyAppiOS, cleanUpProductionFiles, resetDefaultConfig"/>
	<target name="ios-test" depends="iOSConfigTest, copyAppiOS, cleanUpProductionFiles, resetDefaultConfig"/>
	<target name="ios-quality" depends="iOSConfigQuality, copyAppiOS, cleanUpProductionFiles, resetDefaultConfig"/>
	<target name="ios-production" depends="iOSConfigProduction, copyAppiOS, cleanUpProductionFiles, resetDefaultConfig"/>
	
	<target name="desktop-production" depends="buildDesktop, cleanUpProductionFiles"/>	
</project>